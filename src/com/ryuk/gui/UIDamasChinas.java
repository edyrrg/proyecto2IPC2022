package com.ryuk.gui;

import com.ryuk.util.Constantes;
import com.ryuk.builder.BuilderDamas;
import com.ryuk.cronometro.Cronometro;
import com.ryuk.damas_chinas.Casilla;
import com.ryuk.damas_chinas.Damas;
import com.ryuk.partidas.PartidaDamas;
import com.ryuk.player.Player;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author edyrr
 */
public class UIDamasChinas extends javax.swing.JFrame implements Constantes {

    private final ArrayList<PartidaDamas> listDamas;
    private final PartidaDamas partida;
    private final Player jugadorUno;
    private final Player jugadorDos;
    private Damas damas;
    private final Cronometro crono;
    private final UIMenu windowMain;
    private int selectID;
    private boolean salir;

    /**
     * Constructur para cargar partida
     *
     * @param _partida
     * @param _listDamas
     * @param _windowMain
     * @param build
     */
    public UIDamasChinas(PartidaDamas _partida, ArrayList<PartidaDamas> _listDamas, UIMenu _windowMain, boolean isBuild) {
        initComponents();
        ImageIcon icon = new ImageIcon(ICON_UI_IMAGE);
        this.setIconImage(icon.getImage());
        this.getContentPane().setBackground(Color.BLACK);
        //guarda la referencia a la vetana main
        this.windowMain = _windowMain;
        //guardar referencia de lista
        this.listDamas = _listDamas;
        //obtiene los datos de la parida
        this.partida = _partida;
        this.jugadorUno = partida.getJugadorUno();
        this.jugadorDos = partida.getJugadorDos();
        this.damas = partida.getJuedoDamas();
        //buildea el tablero UI y logico de damas
        BuilderDamas.updateReference(damas, this);
        this.add(damas);
        //Crear el cronometro
        this.crono = new Cronometro(partida.getSegundos(), partida.getMinutos(), partida.getHoras(), lblCronometro);
        crono.iniciarCronometro();
        //Muestra los nombre de los jugadores en los lbls piezas comidas por
        String tmp = lblJugadorUno.getText();
        lblJugadorUno.setText(tmp + " " + jugadorUno.getNombre());
        tmp = lblJugadorDos.getText();
        lblJugadorDos.setText(tmp + " " + jugadorDos.getNombre());
        this.setVisible(true);
    }

    /**
     * Contructor que carga la configuracion de partida JcJ
     *
     * @param _partida
     */
    public UIDamasChinas(PartidaDamas _partida, ArrayList<PartidaDamas> _listDamas, UIMenu _windowMain) {
        initComponents();
        ImageIcon icon = new ImageIcon(ICON_UI_IMAGE);
        this.setIconImage(icon.getImage());
        this.getContentPane().setBackground(Color.BLACK);
        //guarda la referencia a la vetana main
        this.windowMain = _windowMain;
        //guardar referencia de lista
        this.listDamas = _listDamas;
        //obtiene los datos de la parida
        this.partida = _partida;
        this.jugadorUno = partida.getJugadorUno();
        this.jugadorDos = partida.getJugadorDos();
        this.damas = partida.getJuedoDamas();
        //buildea el tablero UI y logico de damas
        BuilderDamas.generateTable(damas, this);
        this.add(damas);
        //Crear el cronometro
        this.crono = new Cronometro(partida.getSegundos(), partida.getMinutos(), partida.getHoras(), lblCronometro);
        crono.iniciarCronometro();
        //Muestra los nombre de los jugadores en los lbls piezas comidas por
        String tmp = lblJugadorUno.getText();
        lblJugadorUno.setText(tmp + " " + jugadorUno.getNombre());
        tmp = lblJugadorDos.getText();
        lblJugadorDos.setText(tmp + " " + jugadorDos.getNombre());
        this.setVisible(true);
    }

    public Damas getTablero() {
        return damas;
    }

    public void setTablero(Damas tablero) {
        this.damas = tablero;
    }

    public void updateTablero() {
        for (int i = 0; i < MAX_CASILLAS; i++) {
            for (int j = 0; j < MAX_CASILLAS; j++) {
                Casilla tmp = damas.getTablero()[i][j];
                damas.add(tmp);
            }
        }
        damas.revalidate();
        damas.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPanel = new javax.swing.JPanel();
        containerPanel = new javax.swing.JPanel();
        lblTiempo = new javax.swing.JLabel();
        lblCronometro = new javax.swing.JLabel();
        lblJugadorUno = new javax.swing.JLabel();
        lblContadorUno = new javax.swing.JLabel();
        lblJugadorDos = new javax.swing.JLabel();
        lblContadorDos = new javax.swing.JLabel();
        btnRendirse = new javax.swing.JButton();
        lblTurno = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblTurnoJugador = new javax.swing.JLabel();
        lblBackGround = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Menu = new javax.swing.JMenu();
        GuardarPartida = new javax.swing.JMenuItem();
        VolverMenuMain = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Damas Chinas");
        setMinimumSize(new java.awt.Dimension(1050, 700));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        bgPanel.setMinimumSize(new java.awt.Dimension(420, 650));
        bgPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        containerPanel.setBackground(new java.awt.Color(0, 0, 0));

        lblTiempo.setFont(new java.awt.Font("Lato", 1, 24)); // NOI18N
        lblTiempo.setForeground(new java.awt.Color(255, 255, 255));
        lblTiempo.setText("Tiempo");

        lblCronometro.setFont(new java.awt.Font("Lato", 1, 24)); // NOI18N
        lblCronometro.setForeground(new java.awt.Color(255, 255, 255));
        lblCronometro.setText("00:00:00");

        lblJugadorUno.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        lblJugadorUno.setForeground(new java.awt.Color(255, 255, 255));
        lblJugadorUno.setText("Piezas comidas por ");

        lblContadorUno.setBackground(new java.awt.Color(0, 0, 102));
        lblContadorUno.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        lblContadorUno.setForeground(new java.awt.Color(255, 255, 255));
        lblContadorUno.setText("0");

        lblJugadorDos.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        lblJugadorDos.setForeground(new java.awt.Color(255, 255, 255));
        lblJugadorDos.setText("Piezas comidas por");

        lblContadorDos.setBackground(new java.awt.Color(0, 0, 102));
        lblContadorDos.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        lblContadorDos.setForeground(new java.awt.Color(255, 255, 255));
        lblContadorDos.setText("0");

        btnRendirse.setBackground(new java.awt.Color(7, 7, 60));
        btnRendirse.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        btnRendirse.setForeground(new java.awt.Color(255, 255, 255));
        btnRendirse.setText("Rendirse");
        btnRendirse.setPreferredSize(new java.awt.Dimension(125, 50));
        btnRendirse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRendirseActionPerformed(evt);
            }
        });

        lblTurno.setFont(new java.awt.Font("Lato", 1, 20)); // NOI18N
        lblTurno.setForeground(new java.awt.Color(255, 255, 255));
        lblTurno.setText("Turno de:");

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        lblTurnoJugador.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        lblTurnoJugador.setForeground(new java.awt.Color(255, 255, 255));
        lblTurnoJugador.setText("----------");

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCronometro)
                            .addComponent(lblTiempo)))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblContadorUno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblJugadorUno)
                            .addComponent(lblContadorDos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblJugadorDos)
                            .addGroup(containerPanelLayout.createSequentialGroup()
                                .addComponent(lblTurno)
                                .addGap(18, 18, 18)
                                .addComponent(lblTurnoJugador))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(btnRendirse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblTiempo)
                .addGap(18, 18, 18)
                .addComponent(lblCronometro)
                .addGap(7, 7, 7)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lblJugadorUno)
                .addGap(18, 18, 18)
                .addComponent(lblContadorUno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(lblJugadorDos)
                .addGap(18, 18, 18)
                .addComponent(lblContadorDos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTurno)
                    .addComponent(lblTurnoJugador))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addComponent(btnRendirse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        bgPanel.add(containerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 340, 580));

        lblBackGround.setIcon(new javax.swing.ImageIcon("D:\\proyectos_u\\proyecto2\\resource\\BackGroundR700.jpg")); // NOI18N
        bgPanel.add(lblBackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 670));

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 51));
        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setFont(new java.awt.Font("Lato Semibold", 0, 18)); // NOI18N
        jMenuBar1.setMinimumSize(new java.awt.Dimension(90, 30));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(90, 30));

        Menu.setForeground(new java.awt.Color(255, 255, 255));
        Menu.setText("Opciones");
        Menu.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N

        GuardarPartida.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        GuardarPartida.setText("Guardar Partida");
        GuardarPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarPartidaActionPerformed(evt);
            }
        });
        Menu.add(GuardarPartida);

        VolverMenuMain.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        VolverMenuMain.setText("Volver al Menu Principal");
        VolverMenuMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VolverMenuMainActionPerformed(evt);
            }
        });
        Menu.add(VolverMenuMain);

        jMenuBar1.add(Menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 680, Short.MAX_VALUE)
                .addComponent(bgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRendirseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRendirseActionPerformed
        // TODO add your handling code here:
        this.crono.pararCronometro();
    }//GEN-LAST:event_btnRendirseActionPerformed

    private void VolverMenuMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VolverMenuMainActionPerformed
        // TODO add your handling code here:
        salir = true;
        this.dispose();
        windowMain.setFocusMain();
    }//GEN-LAST:event_VolverMenuMainActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        if (!salir) {
            this.setAutoRequestFocus(true);
            this.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        //primer filtro
        int confirm = JOptionPane.showConfirmDialog(this, "¿Esta seguro de regresar al menu principal?",
                "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (confirm == 1) {
            salir = false;
            return;
        }
        if (confirm == -1) {
            salir = false;
            return;
        }
        //segundo filtro
        int confirm2 = JOptionPane.showConfirmDialog(this, "¿Desea guardar la partida?",
                "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (confirm2 == 1) {
            salir = true;
            windowMain.setFocusMain();
            return;
        }
        if (confirm2 == -1) {
            salir = true;
            windowMain.setFocusMain();
            return;
        }
        if (confirm2 == 0) {
            guardarRelojPartida();
            listDamas.add(partida);
            salir = true;
            windowMain.setFocusMain();
        }

    }//GEN-LAST:event_formWindowClosing

    private void GuardarPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarPartidaActionPerformed
        // TODO add your handling code here:
        guardarRelojPartida();
        //Guarda y abre menu main
        if (listDamas.contains(partida)) {
            selectID = listDamas.indexOf(partida);
            listDamas.set(selectID, partida);
            JOptionPane.showMessageDialog(this, "La partida se guardo con exito!", "Guardar", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        listDamas.add(partida);
        JOptionPane.showMessageDialog(this, "La partida se guardo con exito!", "Guardar", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_GuardarPartidaActionPerformed

    private void guardarRelojPartida() {
        //Para reloj y envia datos para su continuacion
        crono.pararCronometro();
        int tmpS = crono.getSegundos();
        int tmpM = crono.getMinutos();
        int tmpH = crono.getHoras();
        partida.setSegundos(tmpS);
        partida.setMinutos(tmpM);
        partida.setHoras(tmpH);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem GuardarPartida;
    private javax.swing.JMenu Menu;
    private javax.swing.JMenuItem VolverMenuMain;
    private javax.swing.JPanel bgPanel;
    private javax.swing.JButton btnRendirse;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBackGround;
    private javax.swing.JLabel lblContadorDos;
    private javax.swing.JLabel lblContadorUno;
    private javax.swing.JLabel lblCronometro;
    private javax.swing.JLabel lblJugadorDos;
    private javax.swing.JLabel lblJugadorUno;
    private javax.swing.JLabel lblTiempo;
    private javax.swing.JLabel lblTurno;
    private javax.swing.JLabel lblTurnoJugador;
    // End of variables declaration//GEN-END:variables
}
